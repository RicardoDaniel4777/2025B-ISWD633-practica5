version: "3.8"

services:
  db:
    image: postgres:14
    container_name: postgres-sonar
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar_password
      POSTGRES_DB: sonarqube
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sonar-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "sonar"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar_password
      # Opcional: variables de JVM si necesitas subir l√≠mites
      # ES_JAVA_OPTS: "-Xms512m -Xmx2g"
    ports:
      - "9000:9000"    # acceder desde host: http://localhost:9000
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp
    networks:
      - sonar-net
    healthcheck:
      # Comprueba el endpoint de salud de SonarQube
      test: ["CMD-SHELL", "curl -f http://localhost:9000/api/system/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 8
      start_period: 30s
    restart: unless-stopped

volumes:
  postgres_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:

networks:
  sonar-net:
    driver: bridge
